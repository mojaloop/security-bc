version: 2.1

# the default pipeline parameters, which will be updated according to
# the results of the path-filtering orb
parameters:
  run-build-authentication-svc:
    type: boolean
    default: false
  run-build-authorization-svc:
    type: boolean
    default: false
  run-build-client-lib:
    type: boolean
    default: false
  run-build-public-types-lib:
    type: boolean
    default: false

##
# Yarn anchors
#
##
anchor_docker_login: &anchor_docker_login
  name: Login to Docker Hub
  command: docker login -u $DOCKER_USER -p $DOCKER_PASS

##
# Executors
#
# CircleCI Executors
##
executors:
  default-docker:
    working_directory: /home/circleci/project
    resource_class: medium
    docker:
      - image: node:18.13
  default-machine:
    machine:
      image: ubuntu-2204:2022.07.1

jobs:
  common-pre-build:
    executor: default-docker
    parameters:
      service_name:
        type: string
        default: "DEFAULT_SERVICE_NAME"
    steps:
      - checkout
      - run: node -e "const p=require('./modules/<< parameters.service_name >>/package.json'); console.log(p.name.replace('@', '')+':'+p.version)" > /tmp/<< parameters.service_name >>_docker_tag
      - persist_to_workspace:
          root: /tmp
          paths:
            - authentication-svc_docker_tag

  pre-build-authentication-svc: # save the full docker image tag in a /tmp file - ex format "mojaloop/security-bc-authentication-svc:0.1.0"
    executor: default-docker
    steps:
      - checkout
      - run: ls -la
      - run: node -e "const p=require('./modules/authentication-svc/package.json'); console.log(p.name.replace('@', '')+':'+p.version)" > /tmp/authentication-svc_docker_tag
      - persist_to_workspace:
          root: /tmp
          paths:
            - authentication-svc_docker_tag
  build-authentication-svc:
    executor: default-machine
#    working_directory: modules/authentication-svc
    environment:
      DOCKER_BUILDKIT: 1
      BUILDX_PLATFORMS: linux/amd64,linux/arm64
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run: cat /tmp/authentication-svc_docker_tag
#      - run:
#        <<: *anchor_docker_login





# here we specify our workflows, most of which are conditionally
# executed based upon pipeline parameter values. Each workflow calls a
# specific job defined above, in the jobs section.
workflows:
  # when pipeline parameter, run-build-service-1-job is true, the
  # build-service-1 job is triggered.
  authentication-svc:
    when: << pipeline.parameters.run-build-authentication-svc >>
    jobs:
      - common-pre-build:
          service_name: "authentication-svc"
      - pre-build-authentication-svc
      - build-authentication-svc:
          requires:
            - pre-build-authentication-svc