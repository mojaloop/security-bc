version: 2.1

# the default pipeline parameters, which will be updated according to
# the results of the path-filtering orb
parameters:
  run-build-authentication-svc:
    type: boolean
    default: false
  run-build-authorization-svc:
    type: boolean
    default: false
  run-build-client-lib:
    type: boolean
    default: false
  run-build-public-types-lib:
    type: boolean
    default: false

##
# Yarn anchors
#
##
#anchor_docker_login: &anchor_docker_login
#  name: Login to Docker Hub
#  command: docker login -u $DOCKER_USER -p $DOCKER_PASS

##
# Executors
#
# CircleCI Executors
##
executors:
  default-docker:
    working_directory: /home/circleci/project
    resource_class: medium
    docker:
      - image: node:18.13
  default-machine:
    machine:
      image: ubuntu-2204:2022.07.1
      docker_layer_caching: true


jobs:
  common-pre-docker-build:
    executor: default-docker
    parameters:
      service_name:
        type: string
        default: "DEFAULT_SERVICE_NAME"
    steps:
      - checkout
      - run: node -e "const p=require('./modules/<< parameters.service_name >>/package.json'); console.log(p.name.replace('@', '')+':'+p.version)" > /tmp/<< parameters.service_name >>_docker_tag
      - persist_to_workspace:
          root: /tmp
          paths:
            - << parameters.service_name >>_docker_tag
  common-docker-build:
    executor: default-machine
    parameters:
      service_name:
        type: string
        default: "DEFAULT_SERVICE_NAME"
    environment:
      DOCKER_BUILDKIT: 1
      #BUILDX_PLATFORMS: linux/amd64,linux/arm64
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run: cat /tmp/<< parameters.service_name >>_docker_tag
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Docker build image
          command: docker build -f modules/<< parameters.service_name >>/Dockerfile -t $(cat /tmp/<< parameters.service_name >>_docker_tag) .
      - run:
          name: Docker push image
          command: docker push $(cat /tmp/<< parameters.service_name >>_docker_tag) .

#      - run:
#          name: Docker switch docker driver
#          command: docker buildx create --name mybuilder --use --bootstrap
#      - run:
#          name: Docker buildx build and push
#          command: docker buildx build --push --platform linux/amd64 -f modules/<< parameters.service_name >>/Dockerfile -t $(cat /tmp/<< parameters.service_name >>_docker_tag) .
#          command: docker buildx build --push --platform linux/amd64,linux/arm64 -f modules/<< parameters.service_name >>/Dockerfile -t $(cat /tmp/<< parameters.service_name >>_docker_tag) .



workflows:
#  build_lint_and_test:
#    when: << pipeline.parameters.run-build-authentication-svc >>
#    jobs:
#      - setup:
#          context: org-global
#      - lint:
#          context: org-global
#          requires:
#            - setup
#      - build:
#          context: org-global
#          requires:
#            - setup
#      - test-unit:
#          context: org-global
#          requires:
#            - build
#            - lint
#      - coverage-report:
#          context: org-global
#          requires:
#            - test-unit
  authentication-svc:
    when: << pipeline.parameters.run-build-authentication-svc >>
    jobs:
      - common-pre-docker-build:
          context: org-global
          service_name: "authentication-svc"
      - common-docker-build:
          context: org-global
          service_name: "authentication-svc"
          requires:
            - common-pre-docker-build
  authorization-svc:
    when: << pipeline.parameters.run-build-authorization-svc >>
    jobs:
      - common-pre-docker-build:
          context: org-global
          service_name: "authorization-svc"
      - common-docker-build:
          context: org-global
          service_name: "authorization-svc"
          requires:
            - common-pre-docker-build