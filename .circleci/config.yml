# CircleCI v2.1 Config
version: 2.1

# this allows you to use CircleCI's dynamic configuration feature
setup: true

# the path-filtering orb is required to continue a pipeline based on
# the path of an updated fileset
orbs:
  path-filtering: circleci/path-filtering@0.1.3

##
# Yaml anchors
#
##
defaults_configure_git: &defaults_configure_git
  name: Configure git
  command: |
    git config user.email ${GIT_CI_EMAIL}
    git config user.name ${GIT_CI_USER}

defaults_npm_auth: &defaults_npm_auth
  name: Update NPM registry auth token
  command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc

##
# Executors
#
# CircleCI Executors
##
executors:
  default-docker:
    working_directory: &workingDirVar /home/circleci/project
    docker:
      - image: mojaloop/node-18-builder:0.0.3
  default-machine:
    machine:
      image: ubuntu-2204:2022.07.1

jobs:
  setup:
    executor: default-docker
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_modules-cache-{{ checksum "package.json" }}
      - run: BUILD_LIBRDKAFKA=0 npm install
      - save_cache:
          paths:
            - node_modules
          key: node_modules-cache-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: *workingDirVar
          paths:
            - .
  lint:
    executor: default-docker
    steps:
      - attach_workspace:
          at: *workingDirVar
      - restore_cache:
          keys:
            - node_modules-cache-{{ checksum "package.json" }}
      - run: npm run lint

  build:
    executor: default-docker
    steps:
      - attach_workspace:
          at: *workingDirVar
      - restore_cache:
          keys:
            - node_modules-cache-{{ checksum "package.json" }}
      - run: npm run build
      - save_cache:
          paths:
            - packages
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - persist_to_workspace:
          root: *workingDirVar
          paths:
            - .

  test-unit:
    executor: default-docker
    steps:
      - attach_workspace:
          at: *workingDirVar
      - restore_cache:
          keys:
            - build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Execute unit tests
          command: npm run test:unit
      - persist_to_workspace:
          root: *workingDirVar
          paths:
            - .

  coverage-report:
    executor: default-docker
    steps:
      - attach_workspace:
          at: *workingDirVar
      - restore_cache:
          keys:
            - build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Merge json coverage files
          command: npm run coverage:merge
      - run:
          name: Generate coverage report
          command: npm run coverage:gen-report
      - store_artifacts:
          path: coverage

  publish_npm:
    executor: default-docker
    steps:
      - checkout
      - attach_workspace:
          at: *workingDirVar
      - restore_cache:
          keys:
            - build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          <<: *defaults_configure_git
      - run:
          <<: *defaults_npm_auth
      #      - run: cat ~/.npmrc
      - run: npm config set registry https://registry.npmjs.org/
      - run:
          name: Detect changes and publish NPM modules
          command: chmod +x .circleci/*.sh && .circleci/publish_npm.sh
  publish_docker:
    executor: default-machine
    steps:
      - checkout
      - attach_workspace:
          at: *workingDirVar
      - restore_cache:
          keys:
            - build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          <<: *defaults_configure_git
      - run:
          name: Detect changes and publish docker images
          command: chmod +x .circleci/*.sh && .circleci/publish_docker.sh

workflows:
  version: 2
  build_lint_and_test:
    jobs:
      - setup:
          context: org-global
      - lint:
          context: org-global
          requires:
            - setup
      - build:
          context: org-global
          requires:
            - setup
      - test-unit:
          context: org-global
          requires:
            - build
            - lint
      - coverage-report:
          context: org-global
          requires:
            - test-unit
      - publish_npm:
          context: org-global
          filters:
            branches:
              only: main
          requires:
            - test-unit
      - publish_docker:
          context: org-global
          filters:
            branches:
              only: main
          requires:
            - test-unit
